import { Commit } from './commit.ts';
import { GitProvider } from './gitProvider.ts';
import { injectable } from '../deps.ts';

export interface ChangelogWriterBuldable {
  new (provider: GitProvider): ChangelogWriter;
}

export interface ChangelogWriter {
  /**
   * @param filePath the filepath for the CHANGELOG.md file, determined at runtime
   * @param newContent the new content to be added into the CHANGELOG file.
   * how you format this is up to you.
   */
  write(
    filePath: string,
    newContent: string,
  ): Promise<boolean>;

  /**
   * @param newVersion The new version, generated by our `VersionStrategy`
   * @param previousVersion Previous commit, determined by our `VersionStrategy`
   * @param commits The gathered commits.
   */
  generateChangelogEntry(
    newVersion: string,
    previousVersion: string,
    commits: Commit[],
  ): Promise<string>;
}

/**
 * @description base class needed for Dependency inject, should not be used directly.
 */
@injectable()
export class ChangelogWriter {
  // Class left empty on purpose.
}
